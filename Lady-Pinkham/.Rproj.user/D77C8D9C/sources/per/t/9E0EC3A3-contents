---
title: "HW1"
student: "Philip Situmorang"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
```

## Read files

``` {r}
sales<-read.csv(file = "C:\\Users\\phili\\Desktop\\STAT 535\\STAT 535 HW1\\GroceryStoreSales.txt")

sales$Time<-as.numeric(sales$Time)
fMonth<-as.factor(sales$Month)

sales<-data.frame(sales,fMonth)
```


## Q1

During the years 1992 to 2021 the Business Cycle Dating Committee of the National Bureau of Economic Research defined three periods of economic contraction, 2001(4) to 2001(11), 2008(1) to 2009(6), and 2020(3) to 2020(4). 

**1. Make separate time series plots for (i) Sales and (ii) log Sales, and mark the contraction periods on the plots.**

``` {r}
## Example data
set.seed(0)
dat <- sales

## Determine highlighted regions
v <- rep(0, max(dat$Time))
v[c(112:119, 193:210, 339:340)] <- 1

## Get the start and end points for highlighted regions
inds <- diff(c(0, v))
start <- dat$Time[inds == 1]
end <- dat$Time[inds == -1]
if (length(start) > length(end)) end <- c(end, tail(dat$Time, 1))

## highlight region data
rects <- data.frame(start=start, end=end, group=seq_along(start))

ggplot(data=dat, aes(Time, Sales)) +
theme_minimal() +
geom_line(color = "#00AFBB", size = .6) +
geom_rect(data=rects, inherit.aes=FALSE, aes(xmin=start, xmax=end, ymin=min(dat$Sales),
ymax=max(dat$Sales), group=group), color="transparent", fill="orange", 
alpha=0.3) +
labs(title = "Grocery Store Sales", subtitle = "(Contraction period highlighted in Orange)") 
```
``` {r}
ggplot(data=dat, aes(Time, logSales)) +
theme_minimal() +
geom_line(color = "#FC4E07", size = .6) +
geom_rect(data=rects, inherit.aes=FALSE, aes(xmin=start, xmax=end, ymin=min(dat$logSales),
ymax=max(dat$logSales), group=group), color="transparent", fill="orange", alpha=0.3) +
labs(title = "Log Sales", subtitle = "(Contraction period highlighted in Orange)") 
```

**2. Discuss and compare the two plots. Comment on trend structure and volatility. Do the plots reveal any unusual features? **

**ANSWER: **  Upward trend is visible. In the Sales plot (blue line) Sales seem to increase exponentially or by a constant multiplicative factor, whereas in the log Sales plot (red line) log Sales seem to increase by a constant additive amount. 

There is annual seasonal component. Grocery sales tend to peak in December and drop sharply in January and rises to a small peak in the summer months before peaking again in December. The cycle seems to repeat annually.

Volatility seems to increase with the number of Sales, and economic contraction does not seem to affect grocery Sales.

There is an outlier in March 2020 (observation 339), where grocery sales skyrocket due to the start of the COVID-19 pandemic.

**3. If yes, describe what is notable and discuss the underlying causes. Do the two plots indicate whether an additive decomposition model or a multiplicative decomposition model should be fit to model Sales? Explain your answer.**

**ANSWER: ** The most obvious underlying cause of the peak in December Sales is Christmas holiday shopping - consumers buy more groceries to do Christmas cooking. The outlying sharp sales peak in March 2020 is due to the start of COVID-19 pandemic which led Americans to stockpile groceries.

The multiplicative decomposition model should be fit to the model as we do see evidence of increasing volatility as Sales go up.

## Q2

**1. Fit a multiplicative decomposition model to the Sales data. Include a polynomial trend, a seasonal component using the fMonth variable, and trigonometric variables to investigate calendar structure. If you find an outlier value which warrants use of a dummy for adjustment, form the dummy and include it in your model.) Comment on and interpret the statistical results.**

**ANSWER: **

The trend and seasonal components are statistically significant. The partial F-test for both components yield very small p-values which means we reject the null hypothesis that their regression coefficents are simultaneously zero (see below for F-test and p-values).

The outlier variable and calendar variables are also statistically significant. We can see through the summary function that the outlier variable (obs339) also has a very small p-value. For calendar vaiables, the partial F-test also yield a very small value which means that calendar pairs are statistically significant, so we retain them in our analysis.


``` {r}
# add dummy variable for outlier, observation at t = 339
obs339<-rep(0, max(sales$Time))
obs339[339] <- 1
sales<-data.frame(sales,obs339)

model1<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+fMonth+obs339+c348+s348+c432+s432, data = sales);
summary(model1)
```

Partial F-test to determine the significance of fMonth dummy variables

``` {r}
# excluding the time polynomials
model2<-lm(logSales~fMonth+obs339+c348+s348+c432+s432, data = sales)

anova(model2, model1)
```

Partial F-test to determine the significance of fMonth dummy variables

``` {r}
# excluding the fMonth dummy variable
model3<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+obs339+c348+s348+
c432+s432, data = sales)

anova(model3, model1)
```

Partial F-test to determine the significance of calendar pair variables

``` {r}
# excluding the calendar pairs
model4<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+fMonth+obs339, data = sales);

anova(model4, model1)
```

**(a) Tabulate and plot the estimated static seasonal indices and give a detailed interpretation of them in the context of the data collection.**

**ANSWER: ** The output of code below produces log the seasonal indices, so we would need to exponentiate them to obtain the seasonal indices. The final indices will give us the percentage change of Sales from month to month. 

For example, looking at final indices, since February has seasonal index of .918 we can expect sales to fall 8.2 percent below the level of the trend. In December, we can expect sales to increase 6.12 above the level of trend as it has an index of 1.0612.

More generally, the plot indicates that annually grocery store sales increase in December and decrease in January and February before rising again to reach a small peak in the summer months. The percentage factors by which Sales increase/decrease are listed below.

``` {r}
b1<-coef(model1)[1]
b2<-coef(model1)[6:16]+b1
b3<-c(b1,b2)
seas<-b3-mean(b3)

seas.ts<-ts(exp(seas))

seas
plot(seas.ts,ylab="seasonal indices",xlab="month")
```
```{r}
#cbind(seas,exp(seas))

month <- seq(12)
seas_indices <- exp(seas)
seas_df <- data.frame(month, seas, seas_indices)
print.data.frame(tbl_df(seas_df))
```

(b) 

**(i)Save the residuals from the fit. **

```{r}
res1 <- resid(model1)
```

**(ii)Form a normal quantile plot of these residuals**

```{r}
qqnorm(res1)
qqline(res1)
```

**(iii) test the residuals for normality**

```{r}
shapiro.test(res1)
```

**(iv) plot the residuals vs. time**

``` {r}
resid1 <- ts(res1,start=c(1992,1),freq=12)
plot(resid1, xlab="time",ylab="residuals",main="Residuals of Model 1")
```

**(v) and plot their autocorrelations. **

``` {r}
acf(ts(res1), 37)
```


**(vi) Describe each of these results. What conclusions do you draw from the residual analysis? **

**ANSWER:**
- QQPLOT: The QQPLOT seems to substantiate the assumption that the residuals are normally distributed. Most of the quantiles (observations) fall on the qqline. There are patterns of departure from normality with a few points at the upper and lower tails of the plot but not significant enough to the conclude that the residuals are not normally distributed.

- Shapiro-Wilk Normality Test: The p-value is 0.08761, which is not small enough to reject the null hypothesis that the residuals are normally distributed (given a 95% confidence level, the p-value has to fall below 0.05 to conclude that the residuals are not normal).

- Autocorrelation: The autocorrelation function plot indicates strong correlation between the residuals at lags 1-12, which indicates that the model does not adequately capture trend. 

- Residual Analysis: The residuals show that the model does not track autocorrelation structure and the trend structure adequately. The residuals have a slight upward trend, which means that our model did not capture such upward trend adequately. If a model captures trend, the plot of residuals should be relatively flat.

The residuals also seem to be volatile, which indicate that there maybe autocorrelation structure which the model does not capture.

**(vii)In particular, what structures in the time series has the model failed to capture?**

The residuals show that the model does not track the trend structure adequately. The residuals have a slight upward trend, which means that our model did not capture such upward trend adequately. If a model captures trend, the plot of residuals should be relatively flat.

## Q3

**3. Use the decompose function in R with a multiplicative formulation to construct seasonal index estimates for the Sales data. Compare these static seasonal index estimates to those from part 2(a) using (i) a table and (ii) a plot. Discuss what this reveals.**

**ANSWER: **
The seasonal indices and decompose seasonal indices are nearly identical. This means that our model captures the seasonality component well.

```{r}
sales.ts<-ts(sales$Sales,freq=12)
sales.decmpsm<-decompose(sales.ts,type="mult")
seasdmult1<-sales.decmpsm$seasonal
seasdmult<-seasdmult1[1:12]/prod(seasdmult1[1:12])^(1/12)

seasdmult
```


(i) Table comparison of seasonal indices and decompose seasonal indices

``` {r}
month <- seq(12)
seas_indices <- exp(seas)
seas_df <- data.frame(month, seas_indices, seasdmult)
print.data.frame(seas_df)
```
(ii) Plot comparison of seasonal indices and decompose seasonal indices

``` {r}
ggplot(seas_df, aes(x = month)) + 
  geom_line(aes(y = seas_indices, color = 'Seasonal Indices'), size = .8) + 
  geom_line(aes(y = seasdmult, color = 'Decompose Seasonal Indices'), size =.8)
```

## Q4

**Calculate the lag 1, lag 2, and lag 3 residuals from the model in part 2 and add these three new variables to the model you fit in part 2. Be sure to include the calendar trigonometric pairs if they turn out to be significant now. Then perform a residual analysis for this new model. What improvements do you notice?** 

**ANSWER: ** The residuals plot is now flat and less volatile, which means that the model is now closer to yielding white noise. The autocorrelation function plot now also indicates that most lags are between the blue lines. 

This indicates that the adjustment of including lag variables takes into account the autocorrelation structure.  

```{r}
lresid<-c(rep(NA,360))
lag1resid<-lresid
lag2resid<-lresid
lag3resid<-lresid

lag1resid[2]<-resid(model1)[1]
lag1resid[3]<-resid(model1)[2]
lag2resid[3]<-resid(model1)[1]

for(i in 4:360){
i1<-i-1
i2<-i-2
i3<-i-3
lag1resid[i]<-resid(model1)[i1]
lag2resid[i]<-resid(model1)[i2]
lag3resid[i]<-resid(model1)[i3]
}
```

``` {r}
sales<-data.frame(sales,lag1resid,lag2resid,lag3resid)
```

``` {r}
model5<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+fMonth+obs339+
             c348+s348+c432+s432+
             lag1resid+lag2resid+lag3resid, data = sales)

summary(model5)
```
``` {r}
res5 <- resid(model5)
resid5 <- ts(res5,start=c(1992,1),freq=12)
plot(resid5, xlab="time",ylab="residuals",main="Residuals of Model 5")
```

``` {r}
acf(ts(res5), 37)
```


## Q5

Perform the following analysis to investigate the presence of dynamic seasonality.

**(a) Analyze the data spanning the years 1992 through 2007 and calculate the static seasonal estimates.**

``` {r}
# split the Time
sales_i <- sales[sales$Time <= 192, ]

# fit the model
model_i<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+fMonth+obs339+
              c348+s348+c432+s432, data = sales_i)

# find the seasonal indices
b1<-coef(model_i)[1]
b2<-coef(model_i)[6:16]+b1
b3<-c(b1,b2)
seas_i<-b3-mean(b3)

seas_i
```

**(b) Repeat part (a) for the years 2008 through 2019.**

``` {r}
# split the Time
sales_ii <- sales[sales$Time > 192 & sales$Time <= 336, ]

# fit the model
model_ii<-lm(logSales~Time+I(Time^2)+I(Time^3)+I(Time^4)+fMonth+obs339+c348+s348+c432+s432, data = sales_ii);

# find the seasonal indices
b1<-coef(model_ii)[1]
b2<-coef(model_ii)[6:16]+b1
b3<-c(b1,b2)
seas_ii<-b3-mean(b3)

seas_ii
```

**(c) Give a careful comparison, using a table and a plot, of the results in parts (a) and (b). Do you find evidence of dynamic seasonality?**

**ANSWER: ** No, there is no evidence of dynamic seasonality. If there is dynamic seasonality the seasonal indices should differ significantly, yet the 1992-2007 indices and 2008-2019 indices are relatively similar to each other. A glance at the plot below reveals that the seasonality component in the two periods are largely the same, and therefore seasonality is largely static and not dynamic.

(i) Table Comparison
``` {r}
month <- seq(12)
seas_ind_i <- exp(seas_i)
seas_ind_ii <- exp(seas_ii)
seas_df1 <- data.frame(month, seas_ind_i, seas_ind_ii)
print.data.frame(seas_df1)
```
(ii) Plot Comparison
``` {r}
ggplot(seas_df1, aes(x = month)) + 
  geom_line(aes(y = seas_ind_i, color = '1992-2007'), size = .8) + 
  geom_line(aes(y = seas_ind_ii, color = '2008-2019'), size =.8)
```

## Q6

6. Write a summary of the results obtained from parts 2 through 5.

**ANSWER: **

Trend: The fourth-degree polynomial trend component captures the trend well, as indicated by the relatively flat residuals shown in part 2. However, we do see a slight upward trend and volatility remain in the residuals plot, which indicate that there remains some trend component that is not yet captured. 

Seasonality: The month dummy variables in the model capture seasonality well. We compare our model seasonal indices and decompose seasonal indices and found they are nearly identical. 

The seasonality structure of our time series is static. We compare indices from the years 1992 to 2007 and 2008 to 2019 and found that they are nearly identical, and thus we conclude that seasonality is static and not dynamic.

Normality: QQplot and Shapiro-wilk test indicate that there is not enough evidence to conclude that the residuals are not normally distributed.

Autocorrelation: The autocorrelation function graph of model 1 indicated that there are high correlation in lags 1 to 12, which indicates that our original model did not adequately capture trend. We introduced three lag residual variables to take into account autocorrelation component of the time series, and saw that the introduction led to residual plot which is flatter and less volatile. This indicates that the new variables capture autocorrelation well and helped the model take into account autocorrelation which was not accounted for previously, and this led to residuals that are closer to white-noise level.
